---
- name: Install dependencies for building securedrop-app-code deb package.
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items: "{{ development_dependencies }}"
  tags:
    - apt

- name: Install pip wheel.
  pip:
    name: wheel
  tags:
    - pip

- name: Install sass Ruby gem
  gem:
    name: sass
    # TODO: This version lock can be removed when if/when we can get Ruby>2
    # installed on the machine that runs this task (see
    # https://github.com/freedomofpress/securedrop/issues/1594).
    version: "< 3.5"
    user_install: no
  sudo: yes
  tags:
    - build

- name: Clean build path.
  file:
    path: /tmp/{{ securedrop_app_code_deb }}/
    state: absent
  tags:
    - build
    - cleanup

- name: Clean Debian package from build machine.
  file:
    state: absent
    dest: /tmp/{{ securedrop_app_code_deb }}.deb
  tags:
    - build
    - cleanup

- name: Copy install_files/securedrop-app-code dir to build path.
  command: cp -R {{ securedrop_app_code_deb_config }} /tmp/{{ securedrop_app_code_deb }}/
  args:
    creates: /tmp/{{ securedrop_app_code_deb }}/
  tags:
    - build

- name: Copy app code to build directory.
  script: copy_app_code_files.py {{ securedrop_code }} /tmp/{{ securedrop_app_code_deb }}/var/www/securedrop
  args:
    creates: /tmp/{{ securedrop_app_code_deb }}/var/www/securedrop
  tags:
    - build

- name: Remove config.py from build path.
  file:
    state: absent
    dest: /tmp/{{ securedrop_app_code_deb }}/var/www/securedrop/config.py
  tags:
    - build
    - cleanup

- name: Create CSS directory.
  file:
    state: directory
    path: /tmp/{{ securedrop_app_code_deb }}/var/www/securedrop/static/css
  tags:
    - build

- name: Compile SASS to CSS.
  shell: sass --force --stop-on-error --update sass:/tmp/{{ securedrop_app_code_deb }}/var/www/securedrop/static/css --style compressed
  args:
    chdir: "{{ securedrop_code }}"
  tags:
    - build

- name: Create pip wheel archive for Debian package requirements.
  command: pip wheel -r {{ securedrop_pip_requirements }} -w /tmp/{{ securedrop_app_code_deb }}/var/securedrop/wheelhouse
  tags:
    - pip
    - build

- name: Create apparmor.d directory in build path.
  file:
    state: directory
    dest: /tmp/{{ securedrop_app_code_deb }}/etc/apparmor.d
  tags:
    - build
    - apparmor

- name: Copy AppArmor profiles to build path.
  copy:
    src: "{{ item }}"
    dest: /tmp/{{ securedrop_app_code_deb }}/etc/apparmor.d/{{ item }}
  with_items: "{{ apparmor_profiles }}"
  tags:
    - build
    - apparmor

- name: Build securedrop-app-code Debian package.
  command: dpkg-deb --build /tmp/{{ securedrop_app_code_deb }}
  tags:
    - build

- name: Move the deb to the Vagrant shared folder.
  command: cp /tmp/{{ securedrop_app_code_deb }}.deb {{ securedrop_repo }}/build
  tags:
    - build
